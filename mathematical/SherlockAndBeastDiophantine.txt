import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

public class Solution {
//Understood the login from comments of user vnp
//link:-https://codereview.stackexchange.com/questions/67837/generating-decent-numbers
    static void decentNumber(int n) {
        int k=(n-1)/3+1;
        int x=2*n-5*k;
        int y=n*-1+3*k;
       // System.out.println(k+" is k and x is "+x+" and y is "+y);
        if(x>=0 && n>=3) 
        {
           // String str="";
            while(x>0)
            {
                //str+="555";
                System.out.print("555");
                x--;
            }
            while(y>0)
            {
               // str+="33333";
               // System.out.println("ReachingHere");
                //came across the fact that even String has limit.
                // the maximum length of String in java is 2147483647.
                System.out.print("33333");
                y--;
            }
            System.out.println();
        }
        else
        {
            System.out.println("-1");
        }
    }
    
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));

        int t = Integer.parseInt(bufferedReader.readLine().trim());

        IntStream.range(0, t).forEach(tItr -> {
            try {
                int n = Integer.parseInt(bufferedReader.readLine().trim());

                decentNumber(n);
            } catch (IOException ex) {
                throw new RuntimeException(ex);
            }
        });

        bufferedReader.close();
    }
}
